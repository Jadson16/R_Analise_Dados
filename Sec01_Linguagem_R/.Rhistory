vetor <- c(1,2,3,4,5,6,7)
class(vetor)
dias <- c("segunda", "ter?a", "quarta", "quinta", "sexta", "s?bado", "domingo")
class(dias)
juntando <- c(vetor, dias)
juntando
class(juntando)
class(vetor)
z<-seq(0,9,length.out=4) # começa em 0 e acaba em 9, com 3 elementos
z
p<-rep(seq(-1,3),times=3) # função dentre de função
p
pi <- 15
pi
juntando <- c(vetor, dias)
juntando
# como caracter
dias <- c("segunda", "terça", "quarta", "quinta", "sexta", "sábado", "domingo")
class(dias)
juntando <- c(vetor, dias)
juntando
class(juntando)
gastos_dia <- c(400, 300, 100, 500, 150, 430, 70)
gastos_dia
class(gastos_dia)
length(gastos_dia)
ordem_crescente <- sort(gastos_dia)
ordem_crescente
total <- sum(gastos_dia) # soma dos valores do vetor
minimo <- min(gastos_dia)
min(gastos_dia)
max(gastos_dia)
maximo <- max(gastos_dia)
max(gastos_dia)
media <- mean(gastos_dia)
mean(gastos_dia)
limite <- (gastos_dia <= 300)
limite
intervalo
passo <- seq(2,48,by=5)
repeticao_multipla <- rep(c(3,5),c(4,6))
repeticao_multipla
vetor2 <- c(2,4,6,8,10,12)
vetor3 <- c(vetor2,14) # incluindo registro num vetor
vetor3
posicao <- gastos_dia[5]
posicao
gastos_dia[4]
posicao_inexistente <- vetor3[8]
posicao_inexistente
posicao_inexistente <- gastos_dia[8]
posicao_inexistente
posicao_excluida <- gastos_dia[-3]
posicao_excluida
# como caracter
dias <- c("segunda", "terça", "quarta", "quinta", "sexta", "sábado", "domingo")
posicao_excluida <- dias[-3]
posicao_excluida
posicao_excluida <- dias[-5]
posicao_excluida
v <- c(2,6,8,3,2,5,8,0)
unique(v)
y
y<-seq(4,30,by=2)
range(y) # valores mínimo e máximo do vetor, respectivamente
median(y) # mediana do vetor
y
var(y) # variância do vetor
range(y) # valores mínimo e máximo do vetor, respectivamente
sd(y) # desvio padrão do vetor: raiz quadrada da variância
rev(y) # inverte o vetor y
append(y,9999,5) # anexa ao vetor y o número 9999 após a 5ª posição
# Vetor
escolaridade <- c("fundamental", "médio", "superior", "médio", "superior", "fundamental")
print (escolaridade)
# Fator
escolaridade_fator <- as.factor(escolaridade)
print (escolaridade_fator)
escolaridade[3]
escolaridade_fator[3]
escolaridade_fator[3]
escolaridade_fator[2]
escolaridade[3]
escolaridade_fator[2]
summary (escolaridade)
summary (escolaridade_fator)
table(escolaridade)
tensao_casas <- c(110, 220, 110, 110, 110, 110, 220)
print(tensao_casas)
summary(tensao_casas)
tensao_casas_fator <- as.factor (tensao_casas)
print(tensao_casas_fator)
summary(tensao_casas_fator)
?matrix
matrix()
?factor
matrix()
?matrix
matriz <- matrix(c(1,5,10,30,15,8),nrow=3,ncol=2,byrow=TRUE)
print(matriz)
matriz <- matrix(c(1,5,10,30,15,8, 9),nrow=3,ncol=2,byrow=TRUE)
print(matriz)
matriz <- matrix(c(1,5,10,30,15,),nrow=3,ncol=2,byrow=TRUE)
print(matriz)
matriz <- matrix(c(1,5,10,30,15,8),nrow=3,ncol=2,byrow=TRUE)
print(matriz)
?matrix
matriz <- matrix(c(4,8,12,16,20,24),nrow=3,ncol=2,byrow=FALSE)
print(matriz)
matriz [1,3]
matriz <- matrix(c(4,8,12,16,20,24),nrow=2,ncol=3,byrow=TRUE)
print(matriz)
matriz [1,3]
vetorA <- c(2,5,8)
vetorB <- c(3,6,9)
matriz2 <- rbind(vetorA, vetorB)
matriz2
matriz3 <- cbind(vetorA, vetorB)
matriz3
# outra forma de criar matrix
matriz3=matrix(2:9, ncol = 2)
matriz3
# Número de linhas e colunas.
dim(matriz3)
nrow(matriz3)
ncol(matriz3)
# Nomear linhas e colunas
dimnames(matriz3) <- list(c("Linha1","Linha2","Linha3","Linha4"),
c("Coluna1", "Coluna2"))
matriz3
matriz3 <- cbind(vetorA, vetorB)
matriz3
matriz4=matrix(2:13, nrow = 4, byrow=FALSE,
dimnames = list(c("Linha1","Linha2","Linha3","Linha4"),
c("Coluna1", "Coluna2","Coluna3")))
matriz4
# Produto de um número por uma matriz
produto <- 2 * matriz4
produto
# Produto de um número por uma matriz
produto <- 2 * matriz4
produto
matriz4
# Soma ou subtraçãoo de matrizes
matriz5 = matrix(c(1,5,15,8),nrow=2,ncol=2,byrow=TRUE)
matriz5
matriz6 = matrix(c(2,4,6,10),nrow=2,ncol=2,byrow=TRUE)
matriz6
soma = matriz5+matriz6
soma
subtracao = matriz5-matriz6
subtracao
matriz5
matriz6
subtracao = matriz5-matriz6
subtracao
produto_matriz = matriz5 %*% matriz6
produto_matriz
matriz6
matriz5
produto_matriz = matriz5 %*% matriz6
produto_matriz
media_coluna <- colMeans(matriz5)
media_coluna
media_linha <- rowMeans(matriz5)
media_linha
# Soma das linhas ou colunas
soma_linhas <- rowSums(matriz5)
soma_linhas
soma_colunas <- colSums(matriz5)
soma_colunas
# Matriz com caracteres
matriz7 = matrix(c("segunda","ter?a","quarta","quinta"),nrow=2,ncol=2,byrow=FALSE)
matriz7
# Matriz com caracteres
matriz7 = matrix(c("segunda","terça","quarta","quinta"),nrow=2,ncol=2,byrow=FALSE)
matriz7
mes_numero <- c(1,2,3,4,5,6,7,8,9,10,11,12)
mes_nome <- c("janeiro","fevereiro","mar?o","abril","maio","junho","julho",
"agosto","setembro","outubro","novembro","dezembro")
ano <- c(2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021,2021)
data.frame(mes_numero,mes_nome,ano)
View(data_frame)
View(data_frame)
data_frame <- data.frame(mes_numero,mes_nome,ano)
View(data_frame)
View(data_frame)
View(data_frame)
View(data_frame)
# Data Frames pertencentes ao R
df <- mtcars
df
df
View(mtcars)
df2 <- airquality
df2
View(airquality)
?airquality
?datasets
library(help = "datasets")
library(help = "datasets")
df3 = iris
View(df3)
nrow(df3)
ncol(df3)
dim(df3)
summary(df3)
# Manipulando a matriz
df$cyl
df$cyl[3]
df$gear>2
df[df$gear>2,]
#
subset(df, gear > 2)
subset(df, gear > 2 & gear < 4)
df3 <- df[, -2]
# Criando o vetor 'x' com valores de 1 a 100
x <- 1:100
# Criando o data.frame com as colunas solicitadas
df <- data.frame(x = x,
x_cubed = x^3,
exp_x = exp(x),
log_x = log(x))
# Criando o vetor 'x' com valores de 1 a 100
x <- 1:100
# Criando o vetor 'x' com valores de 1 a 100
x <- 1:100
# Criando o vetor 'x' com valores de 1 a 100
x <- 1:100
# Criando o vetor 'x' com valores de 1 a 100
x <- 1:100
# Criando o vetor 'x' com valores de 1 a 100
x <- 1:100
# Criando o data.frame com as colunas solicitadas
df <- data.frame(x = x,
x_cubed = x^3,
exp_x = exp(x),
log_x = log(x))
# Exibindo o data.frame
print(df)
nome <- c("Luciano", "Pedro", "Joyce", "Maria")
idade <- c(46, 38, 27, 29)
curso <- c("Estat?stica", "Linguagem R", "Redes Neurais", "Python")
curso <- c("Estatística", "Economia", "Direito", "Medicina")
lista <- list(nome, idade, curso)
print(lista)
View(lista)
# objeto da lista, basta colocar entre colchetes.
lista[1]
# nomeando termos da lista
lista2 <- list(nome = c("Luciano","Pedro","Joyce", "Maria"),
idade = c(46, 38, 27, 29),
curso = c("Estatística","Linguagem R","Redes Neurais","Python"))
lista2
View(lista2)
lista2[3]
# nomeando termos da lista
lista2 <- list(nome = c("Luciano","Pedro","Joyce", "Maria"),
idade = c(46, 38, 27, 29),
curso = c("Estatística", "Economia", "Direito", "Medicina"))
lista2
lista2[3]
# BAIXAR PACOTES, CASO ELES AINDA NÃO ESTEJAM BAIXADOS
install.packages("area")
# CARREGAR PACOTES
library(area)
?area
# BAIXAR PACOTES, CASO ELES AINDA NÃO ESTEJAM BAIXADOS
install.packages("‘wooldridge’")
# BAIXAR PACOTES, CASO ELES AINDA NÃO ESTEJAM BAIXADOS
install.packages("wooldridge")
# CARREGAR PACOTES
library(wooldridge)
?area
?wooldridge
?wooldridge
??wooldridge
install.packages("area")
install.packages("area")
# CARREGAR PACOTES
library(area)
install.packages("dplyr") # calcula area do polígono
# CARREGAR PACOTES
library(dplyr)
# CARREGAR PACOTES
require(dplyr)
# CARREGAR PACOTES
library(ggplot2)
install.packages("ggplot2") # calcula area do polígono
install.packages("ggplot2")
# CARREGAR PACOTES
library(ggplot2)
# CARREGAR PACOTES
require(ggplot2)
# CARREGAR PACOTES
library(ggplot2)
getwd()
df1 <- read.table("dados/partks.txt")
df1
View(df1)
df2 <- read.csv("dados/mola.csv")
df2
View(df2)
df3 <- read.csv("dados/questoes.csv")
View(df3)
View(df3)
df3 <- read.csv("dados/questoes.csv", encoding = "latin-1")
View(df3)
df3 <- read.csv("dados/questoes.csv", encoding = "iso-8859-1")
View(df3)
df3 <- read.csv("dados/questoes.csv", encoding = "UTF-8")
View(df3)
df4 <- read_xlsx("registro.xlsx")
df4 <- read_xlsx("dados/registro.xlsx")
library(readxl)
x <- 45
if (x > 0 ) { X <- -X}
x <- 45
if (x > 0 ) { X <- -X}
# Exemplo if
x<-45
if(x>0){
x<--x
print(x)
}
# Exemplo if
x <- -45
if(x>0){
x<--x
print(x)
}
# Exemplo if
x <- 45
if(x>0){
x<--x
print(x)
}
y <- 18
if (y < 20){
print("y é menor que 20!")
} else if (y == 20){
print("y é igual a 20")
} else {
print("y é maior que 20")
}
y <- 20
if (y < 20){
print("y é menor que 20!")
} else if (y == 20){
print("y é igual a 20")
} else {
print("y é maior que 20")
}
y <- 22
if (y < 20){
print("y é menor que 20!")
} else if (y == 20){
print("y é igual a 20")
} else {
print("y é maior que 20")
}
w <- 16
ifelse(w %% 2 == 0, "par", "impar")
nota <- 5
if (nota >= 6){
print('Aprovado')
} else if (nota >= 5 & nota< 6){
print('Recupera??o')
} else {
print('Reprovado')
}
if (nota >= 6){
print('Aprovado')
} else if (nota >= 5 & nota< 6){
print('Recuperação')
} else {
print('Reprovado')
}
nota <- 8
if (nota >= 6){
print('Aprovado')
} else if (nota >= 5 & nota< 6){
print('Recuperação')
} else {
print('Reprovado')
}
